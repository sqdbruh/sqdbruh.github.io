{
  "megamod_subtitle": "Разработчик множества продуктов одного из самых революционных стартапов. Даже на канале Forbes его показывали! С помощью MegaMod было создано более 70 тыс. игр.",
  "megamod_description": "- Работа в прекрасной команде\n- Интенсивное использование мультиплеера Photon\n- Работа с WebGL\n- Оптимизация игры\n- Создание инструментов редактора\n- Добавление геймплейных фичей\n- Создание инфраструктуры для команды (телеграм-бот для ежедневных отчетов)",
  "megamod_content": "",
  "chillage_subtitle": "Proof-of-concept, который проверил меня на прочность. Игра была создана с нуля на языке C, без движка, без библиотек. Всё своё, всё handmade.",
  "chillage_description": "Каждый уважающий себя игровой разработчик должен хоть раз задуматься: а как написать свой движок?\nКаждый, не уважающий своё время игровой разработчик, должен попробовать его написать!",
  "chillage_content": "Это до сих пор остаётся одной из самых сложных вещей, что я делал. Встретиться с WinAPI лицом к лицу после .NET — это испытание не для всех. Всё началось как proof-of-concept одного пиксельного шейдера, а медленно переросло в создание своей игры на OpenGL.\nКаждая задача была для меня вызовом, потому что я никогда такого не делал, а ресурсов для midcore OpenGL программирования довольно мало. Захотелось, чтобы при клике мышкой по объекту он выделялся. Вроде бы тривиально, но, подождите, у нас даже нет 3D-пространства в игре. И вот так буквально с каждой задачей. Ну ладно, разобрались с матрицами линейных трансформаций, создали камеру, написали шейдер — можно рендерить. А куда рендерить? Чёрт!\nПродолжать можно бесконечно, этому я посвятил отдельный канал в телеграме.\n\nИз интересного:\n- Метапрограммы для рефлексии в коде. Это стало основной фичей редактора движка.\n- Возможность записывать состояние игры и ввод пользователя. И воспроизводить это бесконечно. В сочетании с динамической подгрузкой .dll с игровой логикой это позволяет редактировать код и сразу видеть, как он меняет поведение игры в реальном времени — без скриптовых языков!\n- Самописный импортёр .gltf файлов с текстурами и материалами.\n- Собственный динамический батчинг геометрии.\n- Система чанков, которые реже обновляются за пределами камеры.\n- Реализация Point Light с тенями.\n- Кастомный UI со своим батчингом и рендерингом текста.\n- Система партиклов с настройками как в Unity.\n- SIMD оптимизации.",
  "megacode_subtitle": "Один из хедлайнеров компании, который я сделал за один марафон. Вы можете запрограммировать любой предмет обычными словами! Прямо на разговорном 'you know'.",
  "megacode_description": "Босс постучался в мой роскошный кабинет и сказал: 'Гриша, спасай эту компанию, нам нужны инвестиции! Нам нужен продукт на стыке передовых технологий! И чтобы помещался в карман.'\n– Говно вопрос, Босс!\n\nНо, на самом деле, задача оказалась не такой уж тривиальной, ведь мне пришлось соединить Roslyn, AOT, CIL interpreter и ещё несколько умных слов так, чтобы всё это работало, да ещё и прямо в браузере! А ещё сделали мобильную версию, где можно надиктовать геймобъекту, что ему нужно делать, просто голосом. Пришлось сильно подумать, но я справился.",
  "megacode_content": "Ну, если серьёзно, никакого роскошного кабинета у меня нет, и я под NDA.\nЭтот прототип использовался на внутренних встречах CEO компании с уважаемыми людьми по всей территории Кремниевой Долины и не только. Сооснователь Mail.ru Дмитрий Гришин, продакт-менеджер Discord, ребята из OpenAI и ещё многие другие играли в эту игру и оценили её потенциал.",
  "megaobby_subtitle": "Моё видение того, как должны выглядеть Obby-игры. Написана на низкоуровневом Playroom мультиплеере. Будет одной из игр, фичернутых в Discord.\nВсё ещё в разработке.",
  "megaobby_description": "Из интересного: используется низкоуровневый мультиплеер. Вся синхронизация лежит на мне. Свои алгоритмы интерполяции, самописные метапрограммы для создания структур синхронизации, свой тикрейт.\nБлагодаря партнёрству с Playroom, работаю с командой мультиплеера напрямую. Коммуникация на английском языке. Помогаю им чинить их же баги.",
  "megaobby_content": "",
  "tyrant_subtitle": "Она стоила нам целую шаурмечную!",
  "tyrant_description": "Один из моих самых любимых проектов, где я попробовал множество новых подходов к программированию. Он был многообещающим, но его ждала печальная судьба. Сначала у главного идеолога появились проблемы с его шаурмечной, из-за чего проект заморозили на несколько месяцев. А потом денег хватило ещё на месяц разработки, после чего пришлось перейти на дешёвых студентов, а я должен был решить: работать за будущие проценты или уйти в MegaMod за настоящие деньги.",
  "tyrant_content": "Шаурмы не будет.\nЗато есть несколько интересных фактов:\n- Это первая игра, в которой я попробовал DOTS и сделал ультра-быстрый A* патфайндер.\n- Архитектура игры была построена так, чтобы каждая сущность могла иметь любые способности, поведенческие паттерны и использовать синергию эффектов. Можно буквально в один клик сделать, чтобы какой-нибудь забор стрелял фаерболлами, замедляющими других сущностей. А если они ещё в снег наступят — удачи им!\n- Я помогал находить на проект достойную, но дешёвую версию себя. Через меня прошло более 30 джуниоров. Дорогой HR, если ты читаешь это, держись!\n- Игра была реализована таким образом, чтобы максимально отделить представление от логики, а логику от текущего состояния. Это позволило делать deep save игры. При заходе в иру через неделю, она восстанавливает свое состояние вплоть до положения летящего снаряда где-то в воздухе. Из-за этого можно прерывать игровые сессии в любой момент и не бояться, что прогресс даже одного небольшого уровня будет утерян.\n- ИИ для мобов тупой как пробка, но в следующем проекте хочу уделить этому много внимания.",
  "notalone_subtitle": "*Решением Верховного суда «международное движение ЛГБТ» признано экстремистским и запрещено в России.",
  "notalone_description": "Некоторые вещи хочется забыть, но в портфолио же что-то нужно положить...\n1.1 тыс. отзывов, всё-таки!",
  "notalone_content": "В далёком 2019 году мы начали разработку многообещающего проекта. На первых этапах я составлял 50% команды по количеству и 70% по массе в килограммах. Это был мой первый опыт работы с клиент-серверными приложениями, вебсокетами, REST и прочими штуками.\nМне также поручили реализацию множества механик и UI-анимаций. Команда росла, я учился взаимодействовать с другими разработчиками и художниками, координировал работу команды и просто старался делать всё качественно.\n\nХочу отметить:\n- Огромное количество аналитики (Amplitude).\n- Огромное количество рекламных офферов, их вариаций и A/B тестов.",
  "sketch_subtitle": "Мой первый крупный соло-проект и огромное количество технических вызовов.",
  "sketch_description": "Казалось бы, что сложного — сделать обычную раскраску, где нужно выбрать цвет и ткнуть? Ну давайте подумаем...",
  "sketch_content": "Для начала нужно создать workflow для художников. Мы же не хотим, чтобы они тратили лишнее время на всякие мелочи. Поэтому я написал с нуля скрипт для Illustrator (до этого никогда не писал JS-скрипты, но долг зовёт), который нарезает изображения по слоям с цветовой кодировкой. Далее пришлось написать с нуля PSD-импортёр (пустяки, да?), который автоматически создаёт префаб раскраски с нужными слоями.\nОй, погодите, нам же нужны номера цветов! Заставим художников тратить на это ещё пару часов? Нет, лучше напишем свой алгоритм для поиска геометрического центра любой формы! Но сначала узнаем, как это вообще работает.\nКруто, теперь мы генерируем даже номера цветов. Теперь настроим доставку контента! Вы знаете, как это делать? Я тоже нет! Но когда это нас останавливало? Изучаем AWS S3, CDN, Unity Addressables. Встраиваем рекламу и продаём на китайский рынок (я, конечно, не этого хотел, но да ладно).\n\nЭто был проект, на котором я старался максимально использовать принципы SOLID/Clean Code. С тех пор я больше таких экспериментов не провожу и предпочитаю Data-Oriented подход к разработке."
}
